---------------------------------------------------------------------
:  ein_area  .... details
--------------------------

Two polygons with rings... out, inner, outer, inner

>>> art.f_(g)
Array... shape (2, 2, 5, 2), ndim 4, not masked

--- array[0] => (2, 5, 2)         .... outer and inner ring 1 ....
  0.00,  0.00     2.00,  2.00     .. outer rings are clockwise
  0.00, 10.00     8.00,  2.00     .. inners rings are counter-cw
 10.00, 10.00     8.00,  8.00   
 10.00,  0.00     2.00,  8.00   
  0.00,  0.00     2.00,  2.00   
 sub (0)         sub (1)        

--- array[1] => (2, 5, 2)         .... outer and inner ring 2 ....
  3.00,  3.00     4.00,  4.00   
  3.00,  7.00     6.00,  4.00   
  7.00,  7.00     6.00,  6.00   
  7.00,  3.00     4.00,  6.00   
  3.00,  3.00     4.00,  4.00   
 sub (0)         sub (1)        


Code results  .... basics of ein_area ....
------------
    xs = g[..., 0]
    ys = g[..., 1]
    x0 = np.atleast_2d(xs[..., 1:])
    y0 = np.atleast_2d(ys[..., :-1])
    x1 = np.atleast_2d(xs[..., :-1])
    y1 = np.atleast_2d(ys[..., 1:])
    e0 = np.einsum('...ij,...ij->...i', x0, y0)
    e1 = np.einsum('...ij,...ij->...i', x1, y1)
    area = abs(np.sum((e0 - e1)*0.5))

>>> xs
array([[[ 0.000,  0.000,  10.000,  10.000,  0.000],
        [ 2.000,  8.000,  8.000,  2.000,  2.000]],

       [[ 3.000,  3.000,  7.000,  7.000,  3.000],
        [ 4.000,  6.000,  6.000,  4.000,  4.000]]])
>>> ys
array([[[ 0.000,  10.000,  10.000,  0.000,  0.000],
        [ 2.000,  2.000,  8.000,  8.000,  2.000]],

       [[ 3.000,  7.000,  7.000,  3.000,  3.000],
        [ 4.000,  4.000,  6.000,  6.000,  4.000]]])
>>> x0
array([[[ 0.000,  10.000,  10.000,  0.000],
        [ 8.000,  8.000,  2.000,  2.000]],

       [[ 3.000,  7.000,  7.000,  3.000],
        [ 6.000,  6.000,  4.000,  4.000]]])
>>> y0
array([[[ 0.000,  10.000,  10.000,  0.000],
        [ 2.000,  2.000,  8.000,  8.000]],

       [[ 3.000,  7.000,  7.000,  3.000],
        [ 4.000,  4.000,  6.000,  6.000]]])
>>> x1
array([[[ 0.000,  0.000,  10.000,  10.000],
        [ 2.000,  8.000,  8.000,  2.000]],

       [[ 3.000,  3.000,  7.000,  7.000],
        [ 4.000,  6.000,  6.000,  4.000]]])
>>> y1
array([[[ 10.000,  10.000,  0.000,  0.000],
        [ 2.000,  8.000,  8.000,  2.000]],

       [[ 7.000,  7.000,  3.000,  3.000],
        [ 4.000,  6.000,  6.000,  4.000]]])
>>> e0
array([[ 200.000,  64.000],
       [ 116.000,  96.000]])
>>> e1
array([[ 0.000,  136.000],
       [ 84.000,  104.000]])
>>> area
76.0       ************* Final result ******************


Result of parts
---------------
>>> g[0]
array([[[ 0.000,  0.000],
        [ 0.000,  10.000],
        [ 10.000,  10.000],
        [ 10.000,  0.000],
        [ 0.000,  0.000]],

       [[ 2.000,  2.000],
        [ 8.000,  2.000],
        [ 8.000,  8.000],
        [ 2.000,  8.000],
        [ 2.000,  2.000]]])
>>> ein_area(g[0])
64.0
>>> g[1]
array([[[ 3.000,  3.000],
        [ 3.000,  7.000],
        [ 7.000,  7.000],
        [ 7.000,  3.000],
        [ 3.000,  3.000]],

       [[ 4.000,  4.000],
        [ 6.000,  4.000],
        [ 6.000,  6.000],
        [ 4.000,  6.000],
        [ 4.000,  4.000]]])
>>> ein_area(g[1])
12.0


Full run of the script
-----------------------

Area using... ein_area ...
Testing for separate polygons, those with holes and separate multipart
    : Example: 
    :  outer   x's: -10 - 10 = 20
    :          y's: -10 - 10 = 20 ... therefore area = 400
    :  inner   x's:  -5 -  5 = 10
    :          y's:  -5 -  5 = 10 ... therefore area = 100  ... final = 300
    
    :
    

(1) Array
 a_out... shape: (5, 2)

array([[ 0.000,  0.000],
       [ 0.000,  10.000],
       [ 10.000,  10.000],
       [ 10.000,  0.000],
       [ 0.000,  0.000]])
area 100.0

(2) Array
 b_out... shape: (5, 2)

array([[ 3.000,  3.000],
       [ 3.000,  7.000],
       [ 7.000,  7.000],
       [ 7.000,  3.000],
       [ 3.000,  3.000]])
area 16.0

(3) Array
 c_out... shape: (5, 2)

array([[-0.000, -0.000],
       [-0.000, -10.000],
       [-10.000, -10.000],
       [-10.000, -0.000],
       [-0.000, -0.000]])
area 100.0

(4) Array
 d_in... shape: (5, 2)

array([[ 2.000,  2.000],
       [ 8.000,  2.000],
       [ 8.000,  8.000],
       [ 2.000,  8.000],
       [ 2.000,  2.000]])
area 36.0

(5) Array
 e_in... shape: (5, 2)

array([[ 3.000,  3.000],
       [ 7.000,  3.000],
       [ 7.000,  7.000],
       [ 3.000,  7.000],
       [ 3.000,  3.000]])
area 16.0

(6) Array
 f_in... shape: (5, 2)

array([[ 4.000,  4.000],
       [ 6.000,  4.000],
       [ 6.000,  6.000],
       [ 4.000,  6.000],
       [ 4.000,  4.000]])
area 4.0

(7) Array
 g_stacked holes [a,b], [d,f]... shape: (2, 2, 5, 2)

array([[[[ 0.000,  0.000],
         [ 0.000,  10.000],
         [ 10.000,  10.000],
         [ 10.000,  0.000],
         [ 0.000,  0.000]],

        [[ 2.000,  2.000],
         [ 8.000,  2.000],
         [ 8.000,  8.000],
         [ 2.000,  8.000],
         [ 2.000,  2.000]]],


       [[[ 3.000,  3.000],
         [ 3.000,  7.000],
         [ 7.000,  7.000],
         [ 7.000,  3.000],
         [ 3.000,  3.000]],

        [[ 4.000,  4.000],
         [ 6.000,  4.000],
         [ 6.000,  6.000],
         [ 4.000,  6.000],
         [ 4.000,  4.000]]]])
area 76.0

(8) Array
 h_separate_parts... shape: (2, 5, 2)

array([[[ 0.000,  0.000],
        [ 0.000,  10.000],
        [ 10.000,  10.000],
        [ 10.000,  0.000],
        [ 0.000,  0.000]],

       [[-0.000, -0.000],
        [-0.000, -10.000],
        [-10.000, -10.000],
        [-10.000, -0.000],
        [-0.000, -0.000]]])
area 200.0


